---
layout: default
---

<style>
/* Default light theme variables */
:root {
  --background-color: #fff;
  --text-color: #333;
  --link-color: #007bff;
  --profile-img: url('{{ "/assets/img/" | append: page.profile.image_light }}'); /* Update with Liquid filter */
}

/* Dark theme overrides */
body.dark-mode {
  --background-color: #333;
  --text-color: #fff;
  --link-color: #1a73e8;
  --profile-img: url('{{ "/assets/img/" | append: page.profile.image_dark }}'); /* Update with Liquid filter */
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
}

a {
  color: var(--link-color);
}

.profile {
  width: 100%;
  height: 300px;
  background-image: var(--profile-img);
  background-size: cover;
  background-position: center;
}

#theme-toggle {
  position: fixed;
  bottom: 10px;
  right: 10px;
  padding: 10px;
  font-size: 16px;
  cursor: pointer;
}

</style>

<div class="profile"></div>
<button id="theme-toggle">Toggle Theme</button>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const toggleButton = document.getElementById('theme-toggle');

  function applyTheme(theme) {
    document.body.className = theme === 'dark' ? 'dark-mode' : '';
    updateToggleButtonText(theme);
  }

  function updateToggleButtonText(theme) {
    toggleButton.textContent = theme === 'dark' ? 'Switch to Light Mode' : 'Switch to Dark Mode';
  }

  function toggleTheme() {
    const currentTheme = document.body.classList.contains('dark-mode') ? 'dark' : 'light';
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    localStorage.setItem('theme', newTheme);
    applyTheme(newTheme);
  }

  toggleButton.addEventListener('click', toggleTheme);

  // Set initial theme based on saved or system preference
  function setInitialTheme() {
    const storedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
    applyTheme(storedTheme);
  }

  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
    const newTheme = e.matches ? 'dark' : 'light';
    localStorage.setItem('theme', newTheme);
    applyTheme(newTheme);
  });

  setInitialTheme();
});
</script>
